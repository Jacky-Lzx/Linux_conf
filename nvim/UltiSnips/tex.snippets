# global !p
# def math():
#     return vim.eval('vimtex#syntax#in_mathzone()') == '1'
# 
# def comment(): 
#     return vim.eval('vimtex#syntax#in_comment()') == '1'
# 
# def env(name):
#     [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
#     return x != '0' and x != '0'
# endglobal

# /mnt/c/Users/11741/AppData/Roaming/Code/User/snippets/latex.json

snippet frame "frame in beamer"
\\begin{frame} \\frametitle{$1}
	$0
\\end{frame}
endsnippet

snippet pp "par" bA
\\par $0
endsnippet

snippet xx "times" wA
\\times $0
endsnippet

# context "math()"
snippet xor "xor"
\\oplus $0
endsnippet

snippet question "homework template"
%----------------------------------------------------------------------------
%   QUESTION $1
%----------------------------------------------------------------------------
\\begin{question}
	\\begin{answer}
	\\end{answer}
\\end{question}
endsnippet

snippet answer "homework template"
\\begin{answer}
	$0
\\end{answer}
endsnippet

snippet subquestion "homework template"
\\begin{subquestion}
	\\begin{answer}
	\\end{answer}
\\end{subquestion}
endsnippet

snippet subsubquestion "homework template"
\\begin{subsubquestion}
	\\begin{answer}
	\\end{answer}
\\end{subsubquestion}
endsnippet

snippet big-bracket "bit-bracket in math mode"
\\left\\{
	\\begin{aligned}
		$0
	\\end{aligned}
\\right.
endsnippet

snippet color-RGB "RGB color"
\\textcolor[RGB]{$1}{$2}$0
endsnippet

snippet color
\\textcorlo{${1:red}}{$2}$0
endsnippet

snippet box-text
\\fbox{$0}
endsnippet

snippet box-equation
\\boxed{$0}
endsnippet

snippet box-line-break "Box with line break"
\\fbox{\\parbox{\\textwidth}{%
	$0
}}
endsnippet

snippet lstset "setting for lstlisting"
\\lstset{
	basicstyle       = \\ttfamily,           % 基本代码风格
	keywordstyle     = \\color{purple}\\bfseries,   % 关键字风格
	identifierstyle  = \\color{brown!80!black},
	commentstyle     = \\rmfamily\\itshape,   % 注释的风格，斜体
	stringstyle      = \\ttfamily,           % 字符串风格
	flexiblecolumns,                        % 别问为什么，加上这个
	numbers          = left,                % 行号的位置在左边
	showspaces       = false,               % 是否显示空格，显示了有点乱，所以不现实了
	numberstyle      = \\ttfamily\\color[RGB]{0,96,96}, % 行号的样式，小五号，tt等宽字体
	showstringspaces = false,
	captionpos       = t,                   % 这段代码的名字所呈现的位置，t指的是top上面
	frame            = lrtb,                % 显示边框
	breaklines=true,
	postbreak=\\mbox{\\textcolor{red}{$\\hookrightarrow$}\\space},
}
endsnippet

snippet template
\\documentclass[a4paper]{article}

%\\setlength{\\parskip}{0.5\\baselineskip}

\\usepackage{geometry}
\\geometry{left = 2.54 cm, right = 2.54 cm, top = 2.54 cm, bottom = 2.54 cm}

\\usepackage{setspace}
\\renewcommand{\\baselinestretch}{1.0}
\\usepackage{indentfirst}
\\setlength{\\parindent}{2em}

%\\usepackage{fontspec}
%\\setmainfont{Times New Roman}

\\usepackage{hyperref}
\\usepackage{ulem}
\\usepackage{graphicx}
%\\usepackage{wrapfig}
\\usepackage{enumitem}
%\\usepackage{xcolor}
%\\usepackage{subcaption}
\\usepackage{float}
\\usepackage{amsmath, amssymb, amsthm}
\\usepackage{booktabs}

%\\pagestyle{empty} % Not showing page number

\\begin{document}
\\renewcommand{\\thesection}{\\Roman{section}}
\\renewcommand{\\thesubsection}{\\Alph{subsection}}
\\renewcommand{\\thesubsubsection}{\\thesubsection.\\arabic{subsubsection}}
\\renewcommand{\\d}{\\: \\mathrm{d} }
\\newcommand{\\e}{\\mathrm{e}}

	$0
\\end{document}
endsnippet

snippet subcaption " use 'subcaption' package first "
\\begin{figure}[H]
	\\centering
	\\begin{subfigure}[b]{0.45\\linewidth}
		\\centering
		\\includegraphics[width=0.9\\linewidth]{$1}
		\\caption{$2}
		\\label{subfig:${3:$1}}
	\\end{subfigure}
	\\begin{subfigure}[b]{0.45\\linewidth}
		\\centering
		\\includegraphics[width=0.9\\linewidth]{$4}
		\\caption{$5}
		\\label{subfig:${6:$4}}
	\\end{subfigure}
	\\caption{$7}
	\\label{fig:$8}
\\end{figure}
endsnippet
snippet subfigure-simple
\\begin{subfigure}[b]{0.45\\linewidth}
	\\centering
	\\includegraphics[width=0.9\\linewidth]{$1}
	\\caption{$2}
	\\label{subfig:${3:$1}}
\\end{subfigure}
endsnippet


snippet enumerate
\\begin{enumerate}[label = \\arabic*]
	\\item $0
\\end{enumerate}
endsnippet
snippet itemize
\\begin{itemize}[leftmargin = 1cm]
	\\item $0
\\end{itemize}
endsnippet

snippet verb
\\verb|$1|$0
endsnippet
snippet vv "auto verb" wA
\\verb|$1|$0
endsnippet
# snippet mk "Inline math" wA
# $${1}$`!p
# if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
#     snip.rv = ' '
# else:
#     snip.rv = ''
# `$2
# endsnippet
snippet mk "Inline math" wA
$$1$$0
endsnippet
snippet dm "Inline math" wA
\[
	$0
\]
endsnippet


snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet
# snippet '^.*\)/' "() Fraction" wrA
# `!p
# stripped = match.string[:-1]
# depth = 0
# i = len(stripped) - 1
# while True:
# 	if stripped[i] == ')': depth += 1
# 	if stripped[i] == '(': depth -= 1
# 	if depth == 0: break;
# 	i -= 1
# snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
# `{$1}$0
# endsnippet

# snippet '(.+)_(\d\d)' "auto subscript" wrA
# `!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1}$0
# endsnippet
snippet __ "auto subscript" iA
_{$1}$0
endsnippet
# snippet '(.+)\^(\d\d)' "auto superscript" wrA
# `!p snip.rv = match.group(1)`^{`!p snip.rv = match.group(2)`$1}$0
# endsnippet
snippet ^^ "auto subscript" iA
^{$1}$0
endsnippet


snippet equation
\begin{equation*}
	$0
\end{equation*}
endsnippet
snippet aligned
\begin{aligned}
	$0
\end{aligned}
endsnippet
snippet table
\\begin{table}[H]
	\\centering
	\\begin{tabular}{${3:cc}}
		$0
	\\end{tabular}
	\\caption{${1:caption}}
	\\label{tab:${2:label}}
\\end{table}
endsnippet

snippet figure
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\linewidth]{$1}
	\\caption{${3:caption}}
	\\label{fig:${4:$1}}
\\end{figure}
endsnippet

snippet begin b
\\begin{$1}
	$0
\\end{$1}
endsnippet
